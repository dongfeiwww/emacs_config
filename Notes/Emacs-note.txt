* 快捷键 (C-h k)
C-u M-: exp		前缀C-u将求值结果插入到当前位置
C-x C-k n		kmacro-name-last-macro
[f3]			kmacro-start-macro
C-x (			kmacro-start-macro
[f4]			kmacro-end-or-call-macro-repeat
C-x )			kmacro-end-or-call-macro-repeat
M-=			M-x count-words-region
C-t			将当前字符与前一个字符进行交换
M-t			将当前单词与前一个单词进行交换
C-u number C-y		指定yank第number次cut的信息
M-u			uppercase word
M-l			lowercase word
M-c			capitalize word
C-x C-u			uppercase region
C-x C-l			lowercase region
C-x .			set the fill prefix(`set-fill-prefix').
C-i			horizontal tab
C-j			newline char
C-m			Carriage Return
C-[			Esc
C-x s			保存多个缓冲区
M-q 			手动折行
C-M-v			向下滚动下方的窗格。
C-M-S-v			向上滚动下方的窗格。
C-x 4 C-f		在新窗口中创建/打开一个文件
ESC ESC ESC		最通用的离开命令，可用来关掉多余的窗格，或者离开小缓冲区
M-% 			Query replace
C-h f 			解释一个函数。需要输入函数名。
C-h v			用来显示 Emacs 变量的文档
C-h a			相关命令搜索（Command Apropos）。C-h a file<Return>
C-h i 			阅读联机手册（也就是通常讲的 Info）。
C-x Tab			indent rigidly 严格缩进，前置负数可反向缩进，例如
    			C-u -4 C-x Tab
C-x {			(shrink-window-horizontally)
C-x }			(enlarge-window-horizontally)
C-x z			repeat the command and initiate and just hit 'z' for continued repeation
C-x h			mark hole buffer 选中整个缓冲区
C-x 3 follow-mode	将文档分为多页，分别观看，例如第一页在左边，第二页在右边
M-% 			Query Replace
C-M-%			Replace Regexp
C-x r k			剪切区域
C-x r m 		标记当前位置为标签
C-x r b			跳转至某个标签
C-x C-f C-f		不使用ido-mode， 返回到查找文件的默认版本
C-x 5 0			delete frame
C-x C-q			toggle-read-only
C-x C-q			in dired-mode make the dired mode editable
C-u C-x =		shows the face under point among other information
C-x `			runs the command next-error after compiling
M-g n			runs the command next-error
M-g p			runs the command previous-error
C-x +, -, 0		change the size of the font
M-:    	  		M-x eval-expression
C-M-right		goto the begin of the expression
C-M-left		goto the end of the expression
C-x C-e			eval the expression
C-s C-w			to search the word that is under cursor
M-; 			make the selected region comment/uncomment
C-x r t			add prefix to selected regions
M-% C-q [TAB]		replace unprintable characters such as tabs or newline
C-x (			start record a sequence of key strokes kmacro-start-macro
C-x )			kmacro-end-macro 
C-x e			kmacro-end-and-call-macro
C-q 			M-x quoted-insert type a char and suppress its functionality

* 交互式函数
M-x hexl-mode				16进制编辑器模式
M-x count-words				计算英文单词的数量
M-x fill-paragraph			将太长的行分割为长度为fill-column的多行
M-x re-builder  			正则表达式的交互匹配模式
M-x capitalize region			将区域内的英文单词首字母大写
M-x linum-mode				在左侧加上行号
M-x doctor		    	       	心理医生，对话交互游戏
M-x a-b-p				生日礼物动画
M-x describe-face			return the current face of the cursor
M-x describe-font			Display information about a font
M-x ibuffer		       	   	查看并编辑缓冲区
M-x Dired				编辑并查看目录
M-x revert-buffer			每次修改了语言环境之后，重新更新缓冲区，以显示正确的语言x
M-x replace-string			替换字符串
M-x replace-regexp			正则表达式替换
M-x describe-language-environment	描述当前的语言环境		
M-x ielm				开启emacs-lisp 交互环境
M-x eval-region				对当前选定的代码块进行求值
M-x set-buffer-file-coding-system	change line endings between Windows/Unix/Mac
M-x global-subword-mode			move cursor into between CamelCaseWords
M-x flush-lines				Delete lines containing matches for REGEXP.
* 普通函数 (C-h f)
(dired-copy-filename-as-kill)		The command w (dired-copy-filename-as-kill) puts the names of the marked (or next n) files into the kill ring, as if you had killed them with C-w. The names are separated by a space.
(frame-width)				get the width of the frame
(frame-height)				get the height of the frame
(setq make-backup-files nil)		stop creating those backup~ files
(setq auto-save-default nil)		stop creating those #auto-save# files

* Dired mode 操作
w (dired-copy-filename-as-kill)		puts the names of the marked (or next n) files into the kill ring, as if you had killed them with C-w. The names are separated by a space.
* 变量 (C-h v)
  default-directory		获取默认目录
* emacs启动操作
emacs -q			start emacs without personal init files but load sitewide startup files, such as ErgoEmacs
emacs -Q			start emacs using a bare bone GNU Emacs

short	long			comment
-q	--no-init-file		Don't load your personal init file.
-Q	--quick	 		same as --no-init-file --no-site-file --no-splash.
* 正则表达式
  [	]			匹配tab键，直接敲打TAB键
  \([0-9]+\)			匹配数字
  \,(1+ \#1)			将匹配的数字+1，闭包操作
* 基本数学操作		
(expt ARG1 ARG2) 	Return the exponential ARG1 ** ARG2.
* 递归编辑		
有时候你会进入所谓的“递归编辑”。递归编辑状态由位于状态栏的方括号所指
示，其中包含了用小括号来指明的模式名称。比如说，你有时可能会看到
[(Fundamental)]，而不是 (Fundamental)。【比如在用 M-% 进行交互式替换的
时候你又用了 C-s 进行搜索，这时替换模式并没有结束，但你又进入了搜索模式，
这就是所谓的递归编辑。】
帮助功能
要使用帮助（Help）功能，请先输入 C-h，然后再输入一个字符以说明你需要什
么帮助。如果你连自己到底需要什么帮助都不知道，那么就输入 C-h ?，Emacs
会告诉你它能提供了哪些帮助。如果你按了 C-h 又想反悔，可以用 C-g 取消。

最基本的帮助功能是 C-h c。输入 C-h c 之后再输入一个组合键，Emacs 会给出
这个命令的简要说明。多字符命令一样可以用 C-h c 来查看。想得到更多的信息，
请把 C-h c 换成 C-h k 试试看。




* 基于数字的正则表达式排序
(defun my-line-sort (begin end)
  (interactive "r")
  (sort-regexp-fields nil "^\\([0-9]+\\).*$" "\\1" begin end))

(defun compare-buffer-substrings-lexigraphically (b1 b2)
  (< (string-to-number (buffer-substring-no-properties (car b1) (cdr b1)))
     (string-to-number (buffer-substring-no-properties (car b2) (cdr b2)))))

(defadvice sort-subr (before sort-subr-lexical-compare activate)
  "In special case, force predicate to be a lexical compare"
  (when (eq this-command 'my-line-sort)
    (ad-set-arg 5 'compare-buffer-substrings-lexigraphically)))

(search-forward-regexp "[^\\]")\328748236
